{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./index.js","webpack:///./node_modules/bsp/index.js","webpack:///./node_modules/sprintf-js/src/sprintf.js","webpack:///./node_modules/concat-typed-array/lib/index.js","webpack:///./node_modules/concat-typed-array/lib/concat.js","webpack:///./node_modules/is-like/index.js","webpack:///./node_modules/sequid/index.js","webpack:///external \"mqtt\""],"names":["root","factory","exports","module","require","define","amd","a","i","this","__WEBPACK_EXTERNAL_MODULE__7__","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","bsp","sequid","default","SliMQ","config","topics","serial","channel","Promise","resolve","reject","mqtt","global","connect","once","err","on","topic","payload","handle","data","replyId","reply","publish","decode","e","end","options","clientId","next","subscribe","unsubscribe","encode","handler","replace","scope","startsWith","sprintf","concatTypedArray","isBufferLike","hasBuffer","Buffer","TypedArray","Uint8Array","encoder","decoder","encodeText","text","from","Error","decodeText","buf","toString","concatBuffers","bufs","isHeaderTemp","temp","length","undefined","fillTemp","info","byteLength","type","lenType","offset","bin","headEnd","parseInt","parsePayloadInfo","slice","decodeSegment","deserialize","serializationStyle","splice","Number","BigInt","Boolean","TypeError","TextEncoder","TextDecoder","BSP","_serialize","objectSerializer","_deserialize","objectDeserializer","_serializationStyle","SyntaxError","NaN","_type","head","len","push","binLen","arguments","Array","isArray","stream","_write","write","_on","_once","_prepend","prependListener","_prependOnce","prependOnceListener","addListener","fn","event","listener","async","chunk","encoding","callback","BSPStatic","JSON","stringify","parse","wrap","re","not_string","not_bool","not_type","not_primitive","number","numeric_arg","json","not_json","modulo","placeholder","key_access","index_access","sign","parse_tree","argv","arg","k","ph","pad","pad_character","pad_length","is_positive","cursor","tree_length","output","keys","param_no","test","Function","isNaN","String","fromCharCode","width","precision","parseFloat","toExponential","toFixed","toPrecision","substring","toLowerCase","valueOf","toUpperCase","pad_char","charAt","repeat","align","sprintf_format","fmt","sprintf_cache","match","_fmt","arg_names","exec","field_list","replacement_field","field_match","sprintf_parse","vsprintf","apply","concat","window","obj","_concat","_concat2","ResultConstructor","totalLength","_len","arrays","_key","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","done","arr","return","result","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_arr","set","isObjectWith","props","every","isArrayLike","strict","indexes","isNonEnumLength","includes","map","filter","isFinite","hasIterator","isCollectionLike","excludeWeakOnes","WeakMap","WeakSet","isErrorLike","isPromiseLike","loop","id","MAX_SAFE_INTEGER"],"mappings":"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","file":"slimq.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"mqtt\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"mqtt\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"mqtt\")) : factory(root[\"mqtt\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE__7__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/* global mqtt, bsp, window */\n\"use strict\";\n\nconst bsp = require(\"bsp\");\nconst sequid = require(\"sequid\").default;\n\nclass SliMQ {\n    /**\n     * @param {{[x: string]: any, scope?: string}} config \n     */\n    constructor(config) {\n        this.config = config;\n        /** @type {{[topic: string]: (data: any, reply: Function) => void}} */\n        this.topics = Object.create(null);\n        this.serial = sequid(0, true);\n        this.channel = null;\n    }\n\n    /**\n     * @returns {Promise<this>}\n     */\n    connect() {\n        return new Promise((resolve, reject) => {\n            if (typeof mqtt === \"undefined\") {\n                global[\"mqtt\"] = require(\"mqtt\");\n            }\n\n            this.channel = mqtt.connect(this.config);\n            this.channel.once(\"connect\", () => {\n                resolve(this);\n            }).once(\"error\", (err) => {\n                reject(err);\n            }).on(\"message\", (topic, payload) => {\n                let handle = this.topics[topic];\n\n                if (handle) {\n                    let data, replyId;\n                    let reply = (data) => {\n                        replyId && this.publish(replyId, data);\n                    };\n\n                    try {\n                        [data, replyId] = bsp.decode(payload, []);\n                    } catch (e) {\n                        data = payload;\n                    }\n\n                    handle(data, reply);\n                }\n            });\n        });\n    }\n\n    /**\n     * @returns {Promise<this>}\n     */\n    disconnect() {\n        return new Promise(resolve => {\n            this.channel.end(true, null, () => resolve(this));\n        });\n    }\n\n    /**\n     * @param {string} topic \n     * @param {any} data\n     * @param {{ qos?: 0 | 1 | 2, retain?: boolean, dup?: boolean }} options\n     * @param {(data: any) => void} reply\n     */\n    publish(topic, data, options = null, reply = null) {\n        topic = this.resolve(topic);\n\n        if (typeof options === \"function\") {\n            reply = options;\n            options = null;\n        }\n\n        if (reply) {\n            let { clientId } = this.channel.options;\n            let replyId = `${topic}@${clientId}$${this.serial.next().value}`;\n\n            this.subscribe(replyId, (data) => {\n                this.unsubscribe(replyId);\n                reply(data);\n            });\n            this.channel.publish(topic, bsp.encode(data, replyId), options);\n        } else {\n            this.channel.publish(topic, bsp.encode(data), options);\n        }\n\n        return this;\n    }\n\n    /**\n     * @param {string} topic \n     * @param {{ qos: 0 | 1 | 2 }} [options]\n     * @param {(data: any, reply: (data: any) => void) => void} handler \n     */\n    subscribe(topic, options, handler) {\n        topic = this.resolve(topic);\n\n        if (typeof options === \"function\") {\n            handler = options;\n            options = null;\n        }\n\n        this.channel.subscribe(topic, options);\n        this.topics[topic] = handler;\n\n        return this;\n    }\n\n    /**\n     * @param {string} topic \n     */\n    unsubscribe(topic) {\n        topic = this.resolve(topic);\n\n        if (this.topics[topic]) {\n            this.channel.unsubscribe(topic);\n            delete this.topics[topic];\n        }\n\n        return this;\n    }\n\n    /**\n     * @param {string} topic \n     */\n    resolve(topic) {\n        topic = topic.replace(/\\./g, \"/\");\n\n        if (this.config.scope && !topic.startsWith(this.config.scope + \"/\")) {\n            topic = this.config.scope + \"/\" + topic;\n        }\n\n        return topic;\n    }\n}\n\nexports.SliMQ = SliMQ;\nexports.default = SliMQ;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nconst sprintf = require(\"sprintf-js\").sprintf;\nconst concatTypedArray = require(\"concat-typed-array\");\nconst { isBufferLike } = require(\"is-like\");\n\nconst hasBuffer = typeof Buffer === \"function\";\nconst TypedArray = hasBuffer ? Buffer : Uint8Array;\n\n/** @type {TextEncoder} */\nlet encoder;\n/** @type {TextDecoder} */\nlet decoder;\n\nif (typeof TextEncoder === \"function\") {\n    encoder = new TextEncoder();\n}\n\nif (typeof TextDecoder === \"function\") {\n    decoder = new TextDecoder(\"utf8\");\n}\n\n/**\n * @param {string} text \n * @returns {Buffer|Uint8Array}\n */\nfunction encodeText(text) {\n    if (hasBuffer) {\n        return Buffer.from(text);\n    } else if (encoder) {\n        return encoder.encode(text);\n    } else {\n        throw new Error(\"No implementation of text encoder was found\");\n    }\n}\n\n/**\n * @param {Buffer|Uint8Array} buf \n * @returns {string}\n */\nfunction decodeText(buf) {\n    if (hasBuffer) {\n        return Buffer.from(buf).toString(\"utf8\");\n    } else if (decoder) {\n        return decoder.decode(buf);\n    } else {\n        throw new Error(\"No implementation of text decoder was found\");\n    }\n}\n\n/**\n * @param {Buffer[] | Uint8Array[]} bufs\n * @returns {Buffer|Uint8Array}\n */\nfunction concatBuffers(bufs) {\n    return concatTypedArray(TypedArray, ...bufs);\n}\n\n\n/**\n * @param {Buffer|Uint8Array} buf\n */\nfunction parsePayloadInfo(buf) {\n    if (buf.byteLength < 3) {\n        return null; // header frame\n    }\n\n    let [type, lenType] = buf;\n    let offset = [0, 3, 4, 10][lenType];\n    let length = -1;\n\n    if (type > 6 || lenType > 3) {\n        return false; // malformed/unencoded data\n    }\n\n    if (buf.byteLength < offset) {\n        return null;  // header frame\n    }\n\n    if (lenType === 1) {\n        length = buf[2];\n    } else {\n        let bin = \"\";\n        let headEnd = lenType === 2 ? 4 : 10;\n\n        for (let i = 2; i < headEnd; i++) {\n            bin += sprintf(\"%08b\", buf[i]);\n        }\n\n        length = parseInt(bin, 2);\n    }\n\n    return { type, offset, length };\n}\n\n/**\n * @param {[number, number, Buffer|Uint8Array]} temp \n */\nfunction isHeaderTemp(temp) {\n    return temp.length === 3\n        && temp[0] === undefined\n        && temp[1] === undefined\n        && temp[2] instanceof Uint8Array;\n}\n\n/**\n * @param {Buffer|Uint8Array} buf \n * @param {[number, number, Buffer|Uint8Array]} temp \n */\nfunction fillTemp(buf, temp) {\n    if (isHeaderTemp(temp)) {\n        buf = concatBuffers([temp[2], buf]);\n    }\n\n    let info = parsePayloadInfo(buf);\n\n    if (info === false) {\n        return; // malformed/unencoded data\n    } else if (info === null) {\n        temp[0] = temp[1] = void 0;\n        temp[2] = buf;\n    } else {\n        let { type, length, offset } = info;\n\n        if (offset !== 0) {\n            temp[0] = type;\n            temp[1] = length;\n            temp[2] = buf.slice(offset);\n        }\n    }\n}\n\n/**\n * @param {Buffer|Uint8Array} buf \n * @param {[number, number, Buffer|Uint8Array]} temp\n * @param {Function} deserialize\n * @param {\"string\" | \"buffer\"} serializationStyle\n * @returns {IterableIterator<any>}\n */\nfunction* decodeSegment(buf, temp, deserialize, serializationStyle) {\n    // put the buffer into the temp\n    if (temp.length === 0 || isHeaderTemp(temp)) {\n        fillTemp(buf, temp);\n    } else if (temp.length === 3) {\n        temp[2] = concatBuffers([temp[2], buf]);\n    }\n\n    // scan the temp and yield any parsed data\n    while (temp.length === 3 && temp[2].byteLength >= temp[1]) {\n        let [type, length, buf] = temp;\n        let payload = buf.slice(0, length);\n\n        buf = buf.slice(length);\n\n        if (buf.byteLength > 0) {\n            fillTemp(buf, temp);\n        } else {\n            temp.splice(0, 3); // clean temp\n        }\n\n        switch (type) {\n            case 0: // null\n                yield null;\n                break;\n\n            case 1: // string\n                yield decodeText(payload);\n                break;\n\n            case 2: // number\n                yield Number(decodeText(payload));\n                break;\n\n            case 3: // bigint\n                yield BigInt(decodeText(payload));\n                break;\n\n            case 4: // boolean\n                yield Boolean(payload[0]);\n                break;\n\n            case 5: // object\n                if (serializationStyle === \"string\")\n                    yield deserialize(decodeText(payload));\n                else\n                    yield deserialize(payload);\n                break;\n\n            case 6: // binary\n                yield payload;\n                break;\n\n            default:\n                throw TypeError(\n                    `unknown payload type (${sprintf(\"%02X\", type)})`);\n        }\n    }\n}\n\nclass BSP {\n    /**\n     * @param {{\n            objectSerializer: Function,\n            objectDeserializer: Function,\n            serializationStyle?: \"string\" | \"buffer\"\n        }} options \n     */\n    constructor(options) {\n        this._serialize = options.objectSerializer;\n        this._deserialize = options.objectDeserializer;\n        this._serializationStyle = options.serializationStyle || \"string\";\n    }\n\n    encode(...data) {\n        if (data.length === 0) {\n            throw new SyntaxError(\"encode function requires at least one argument\");\n        }\n\n        let buf = TypedArray.from([]);\n\n        for (let payload of data) {\n            let type = NaN;\n            let _type = typeof payload;\n\n            switch (_type) {\n                case \"string\":\n                    type = 1;\n                    payload = encodeText(payload);\n                    break;\n\n                case \"number\":\n                    type = 2;\n                    payload = encodeText(payload.toString());\n                    break;\n\n                case \"bigint\":\n                    type = 3;\n                    payload = encodeText(payload.toString());\n                    break;\n\n                case \"boolean\":\n                    type = 4;\n                    payload = TypedArray.from([Number(payload)]);\n                    break;\n\n                case \"object\":\n                case \"undefined\":\n                    if (null === payload || undefined === payload) {\n                        type = 0;\n                        payload = TypedArray.from([]);\n                    } else if (isBufferLike(payload)) {\n                        type = 6; // raw data\n                    } else {\n                        type = 5;\n                        payload = this._serialize(payload);\n\n                        if (typeof payload === \"string\")\n                            payload = encodeText(payload);\n                    }\n                    break;\n\n                default:\n                    throw new TypeError(`unsupported payload type (${_type})`);\n            }\n\n            let head = [type];\n            let len = payload.byteLength;\n\n            if (len <= 255) {\n                head.push(1, len);\n            } else {\n                let binLen = len <= 65535 ? 16 : 64;\n                let bin = sprintf(`%0${binLen}b`, len);\n\n                head.push(len <= 65535 ? 2 : 3);\n\n                for (let i = 0; i < binLen;) {\n                    head.push(parseInt(bin.slice(i, i += 8), 2));\n                }\n            }\n\n            buf = concatBuffers([buf, TypedArray.from(head), payload]);\n        }\n\n        return buf;\n    }\n\n    /**\n     * @param {Buffer|Uint8Array} buf \n     */\n    decode(buf) {\n        if (arguments.length === 2 && Array.isArray(arguments[1])) {\n            return decodeSegment(\n                buf, arguments[1],\n                this._deserialize,\n                this._serializationStyle\n            );\n        } else {\n            return decodeSegment(\n                buf,\n                [],\n                this._deserialize,\n                this._serializationStyle\n            ).next().value;\n        }\n    }\n\n    wrap(stream) {\n        let _write = stream.write.bind(stream);\n        let _on = stream.on.bind(stream);\n        let _once = stream.once.bind(stream);\n        let _prepend = stream.prependListener.bind(stream);\n        let _prependOnce = stream.prependOnceListener.bind(stream);\n        let addListener = (fn, event, listener) => {\n            if (event === \"data\") {\n                let temp = [];\n                let _listener = async (buf) => {\n                    for (let data of this.decode(buf, temp)) {\n                        listener(data);\n                        await Promise.resolve(); // make async\n                    }\n                };\n                return fn(\"data\", _listener);\n            } else {\n                return fn(event, listener);\n            }\n        };\n\n        stream.write = (chunk, encoding, callback) => {\n            return _write(this.encode(chunk), encoding, callback);\n        };\n\n        stream.on = stream.addListener = function on(event, listener) {\n            return addListener(_on, event, listener);\n        };\n\n        stream.once = function once(event, listener) {\n            return addListener(_once, event, listener);\n        };\n\n        stream.prependListener = function prependListener(event, listener) {\n            return addListener(_prepend, event, listener);\n        };\n\n        stream.prependOnceListener = function prependOnceListener(event, listener) {\n            return addListener(_prependOnce, event, listener);\n        };\n\n        return stream;\n    }\n}\n\nconst BSPStatic = new BSP({\n    objectSerializer: JSON.stringify,\n    objectDeserializer: JSON.parse\n});\n\nexports.BSP = BSP;\nexports.encode = BSPStatic.encode.bind(BSPStatic);\nexports.decode = BSPStatic.decode.bind(BSPStatic);\nexports.wrap = BSPStatic.wrap.bind(BSPStatic);","/* global window, exports, define */\n\n!function() {\n    'use strict'\n\n    var re = {\n        not_string: /[^s]/,\n        not_bool: /[^t]/,\n        not_type: /[^T]/,\n        not_primitive: /[^v]/,\n        number: /[diefg]/,\n        numeric_arg: /[bcdiefguxX]/,\n        json: /[j]/,\n        not_json: /[^j]/,\n        text: /^[^\\x25]+/,\n        modulo: /^\\x25{2}/,\n        placeholder: /^\\x25(?:([1-9]\\d*)\\$|\\(([^)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-gijostTuvxX])/,\n        key: /^([a-z_][a-z_\\d]*)/i,\n        key_access: /^\\.([a-z_][a-z_\\d]*)/i,\n        index_access: /^\\[(\\d+)\\]/,\n        sign: /^[+-]/\n    }\n\n    function sprintf(key) {\n        // `arguments` is not an array, but should be fine for this call\n        return sprintf_format(sprintf_parse(key), arguments)\n    }\n\n    function vsprintf(fmt, argv) {\n        return sprintf.apply(null, [fmt].concat(argv || []))\n    }\n\n    function sprintf_format(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, arg, output = '', i, k, ph, pad, pad_character, pad_length, is_positive, sign\n        for (i = 0; i < tree_length; i++) {\n            if (typeof parse_tree[i] === 'string') {\n                output += parse_tree[i]\n            }\n            else if (typeof parse_tree[i] === 'object') {\n                ph = parse_tree[i] // convenience purposes only\n                if (ph.keys) { // keyword argument\n                    arg = argv[cursor]\n                    for (k = 0; k < ph.keys.length; k++) {\n                        if (arg == undefined) {\n                            throw new Error(sprintf('[sprintf] Cannot access property \"%s\" of undefined value \"%s\"', ph.keys[k], ph.keys[k-1]))\n                        }\n                        arg = arg[ph.keys[k]]\n                    }\n                }\n                else if (ph.param_no) { // positional argument (explicit)\n                    arg = argv[ph.param_no]\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++]\n                }\n\n                if (re.not_type.test(ph.type) && re.not_primitive.test(ph.type) && arg instanceof Function) {\n                    arg = arg()\n                }\n\n                if (re.numeric_arg.test(ph.type) && (typeof arg !== 'number' && isNaN(arg))) {\n                    throw new TypeError(sprintf('[sprintf] expecting number but found %T', arg))\n                }\n\n                if (re.number.test(ph.type)) {\n                    is_positive = arg >= 0\n                }\n\n                switch (ph.type) {\n                    case 'b':\n                        arg = parseInt(arg, 10).toString(2)\n                        break\n                    case 'c':\n                        arg = String.fromCharCode(parseInt(arg, 10))\n                        break\n                    case 'd':\n                    case 'i':\n                        arg = parseInt(arg, 10)\n                        break\n                    case 'j':\n                        arg = JSON.stringify(arg, null, ph.width ? parseInt(ph.width) : 0)\n                        break\n                    case 'e':\n                        arg = ph.precision ? parseFloat(arg).toExponential(ph.precision) : parseFloat(arg).toExponential()\n                        break\n                    case 'f':\n                        arg = ph.precision ? parseFloat(arg).toFixed(ph.precision) : parseFloat(arg)\n                        break\n                    case 'g':\n                        arg = ph.precision ? String(Number(arg.toPrecision(ph.precision))) : parseFloat(arg)\n                        break\n                    case 'o':\n                        arg = (parseInt(arg, 10) >>> 0).toString(8)\n                        break\n                    case 's':\n                        arg = String(arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 't':\n                        arg = String(!!arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'T':\n                        arg = Object.prototype.toString.call(arg).slice(8, -1).toLowerCase()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'u':\n                        arg = parseInt(arg, 10) >>> 0\n                        break\n                    case 'v':\n                        arg = arg.valueOf()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'x':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16)\n                        break\n                    case 'X':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16).toUpperCase()\n                        break\n                }\n                if (re.json.test(ph.type)) {\n                    output += arg\n                }\n                else {\n                    if (re.number.test(ph.type) && (!is_positive || ph.sign)) {\n                        sign = is_positive ? '+' : '-'\n                        arg = arg.toString().replace(re.sign, '')\n                    }\n                    else {\n                        sign = ''\n                    }\n                    pad_character = ph.pad_char ? ph.pad_char === '0' ? '0' : ph.pad_char.charAt(1) : ' '\n                    pad_length = ph.width - (sign + arg).length\n                    pad = ph.width ? (pad_length > 0 ? pad_character.repeat(pad_length) : '') : ''\n                    output += ph.align ? sign + arg + pad : (pad_character === '0' ? sign + pad + arg : pad + sign + arg)\n                }\n            }\n        }\n        return output\n    }\n\n    var sprintf_cache = Object.create(null)\n\n    function sprintf_parse(fmt) {\n        if (sprintf_cache[fmt]) {\n            return sprintf_cache[fmt]\n        }\n\n        var _fmt = fmt, match, parse_tree = [], arg_names = 0\n        while (_fmt) {\n            if ((match = re.text.exec(_fmt)) !== null) {\n                parse_tree.push(match[0])\n            }\n            else if ((match = re.modulo.exec(_fmt)) !== null) {\n                parse_tree.push('%')\n            }\n            else if ((match = re.placeholder.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1\n                    var field_list = [], replacement_field = match[2], field_match = []\n                    if ((field_match = re.key.exec(replacement_field)) !== null) {\n                        field_list.push(field_match[1])\n                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\n                            if ((field_match = re.key_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else if ((field_match = re.index_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else {\n                                throw new SyntaxError('[sprintf] failed to parse named argument key')\n                            }\n                        }\n                    }\n                    else {\n                        throw new SyntaxError('[sprintf] failed to parse named argument key')\n                    }\n                    match[2] = field_list\n                }\n                else {\n                    arg_names |= 2\n                }\n                if (arg_names === 3) {\n                    throw new Error('[sprintf] mixing positional and named placeholders is not (yet) supported')\n                }\n\n                parse_tree.push(\n                    {\n                        placeholder: match[0],\n                        param_no:    match[1],\n                        keys:        match[2],\n                        sign:        match[3],\n                        pad_char:    match[4],\n                        align:       match[5],\n                        width:       match[6],\n                        precision:   match[7],\n                        type:        match[8]\n                    }\n                )\n            }\n            else {\n                throw new SyntaxError('[sprintf] unexpected placeholder')\n            }\n            _fmt = _fmt.substring(match[0].length)\n        }\n        return sprintf_cache[fmt] = parse_tree\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    /* eslint-disable quote-props */\n    if (typeof exports !== 'undefined') {\n        exports['sprintf'] = sprintf\n        exports['vsprintf'] = vsprintf\n    }\n    if (typeof window !== 'undefined') {\n        window['sprintf'] = sprintf\n        window['vsprintf'] = vsprintf\n\n        if (typeof define === 'function' && define['amd']) {\n            define(function() {\n                return {\n                    'sprintf': sprintf,\n                    'vsprintf': vsprintf\n                }\n            })\n        }\n    }\n    /* eslint-enable quote-props */\n}(); // eslint-disable-line\n","'use strict';\n\nvar _concat = require('./concat');\n\nvar _concat2 = _interopRequireDefault(_concat);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = _concat2.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (ResultConstructor) {\n  var totalLength = 0;\n\n  for (var _len = arguments.length, arrays = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    arrays[_key - 1] = arguments[_key];\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = arrays[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var arr = _step.value;\n\n      totalLength += arr.length;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var result = new ResultConstructor(totalLength);\n  var offset = 0;\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = arrays[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _arr = _step2.value;\n\n      result.set(_arr, offset);\n      offset += _arr.length;\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return result;\n};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n/**\n * @param {any} obj \n * @param {Array<[string|symbol, string]>} props \n * @param {Array<string>} types\n */\nfunction isObjectWith(obj, ...props) {\n    let isObj = typeof obj === \"object\" && obj !== null;\n    return isObj && props.every(([p, t]) => p in obj && typeof obj[p] === t);\n}\n\nfunction isArrayLike(obj, strict = false) {\n    if (Array.isArray(obj)) {\n        return true;\n    } else if (!strict) {\n        return isObjectWith(obj, [\"length\", \"number\"])\n            || (typeof obj === \"string\");\n    } else if (isObjectWith(obj, [\"length\", \"number\"])) {\n        let keys = Object.keys(obj);\n        let isNonEnumLength = !keys.includes(\"length\");\n        let indexes;\n\n        if (obj.length === 0 ||\n            (indexes = keys.map(Number).filter(isFinite)).length === 0) {\n            return isNonEnumLength;\n        } else {\n            let hasIterator = typeof obj[Symbol.iterator] === \"function\";\n\n            for (let i = obj.length; i--;) {\n                if (!indexes.includes(i) && !(isNonEnumLength || hasIterator)) {\n                    return false;\n                }\n            }\n\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isCollectionLike(obj, excludeWeakOnes = false) {\n    return (isObjectWith(obj, [\"size\", \"number\"], [Symbol.iterator, \"function\"]))\n        || (!excludeWeakOnes &&\n            (obj instanceof WeakMap || obj instanceof WeakSet));\n}\n\nfunction isBufferLike(obj) {\n    return isObjectWith(obj, [\"byteLength\", \"number\"], [\"slice\", \"function\"]);\n}\n\nfunction isErrorLike(obj) {\n    return isObjectWith(obj,\n        [\"name\", \"string\"],\n        [\"message\", \"string\"],\n        [\"stack\", \"string\"]\n    );\n}\n\nfunction isPromiseLike(obj) {\n    return isObjectWith(obj, [\"then\", \"function\"]);\n}\n\nexports.isArrayLike = isArrayLike;\nexports.isCollectionLike = isCollectionLike;\nexports.isBufferLike = isBufferLike;\nexports.isErrorLike = isErrorLike;\nexports.isPromiseLike = isPromiseLike;","\"use strict\";\n\nfunction* sequid(offset, loop) {\n    let id = offset || 0;\n\n    while (true) {\n        yield ++id;\n\n        if (id === Number.MAX_SAFE_INTEGER) {\n            if (loop) {\n                id = offset || 0;\n            } else {\n                break;\n            }\n        }\n    }\n}\n\nmodule.exports = sequid;\nmodule.exports.default = sequid;","module.exports = __WEBPACK_EXTERNAL_MODULE__7__;"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./index.js","webpack:///./node_modules/bsp/index.js","webpack:///./node_modules/sprintf-js/src/sprintf.js","webpack:///./node_modules/concat-typed-array/lib/index.js","webpack:///./node_modules/concat-typed-array/lib/concat.js","webpack:///./node_modules/is-like/index.js","webpack:///./node_modules/sequid/index.js","webpack:///external \"mqtt\""],"names":["root","factory","exports","module","require","define","amd","a","i","this","__WEBPACK_EXTERNAL_MODULE__7__","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","bsp","sequid","default","SimpleMQ","config","topics","serial","channel","Promise","resolve","reject","mqtt","global","connect","on","topic","payload","handlers","size","data","replyId","reply","publish","decode","e","handler","values","err","end","next","subscribe","unsubscribe","encode","add","Set","delete","replace","scope","sprintf","concatTypedArray","isBufferLike","hasBuffer","Buffer","TypedArray","Uint8Array","encoder","decoder","encodeText","text","from","Error","decodeText","buf","toString","concatBuffers","bufs","type","NaN","Number","JSON","stringify","head","len","byteLength","push","bin","parseInt","slice","isHeaderTemp","temp","length","undefined","fillTemp","info","lenType","offset","parsePayloadInfo","decodeSegment","BigInt","Boolean","parse","splice","arguments","Array","isArray","TextEncoder","TextDecoder","wrap","stream","_write","write","_on","_once","once","_prepend","prependListener","_prependOnce","prependOnceListener","addListener","fn","event","listener","chunk","encoding","callback","re","not_string","not_bool","not_type","not_primitive","number","numeric_arg","json","not_json","modulo","placeholder","key_access","index_access","sign","parse_tree","argv","arg","k","ph","pad","pad_character","pad_length","is_positive","cursor","tree_length","output","keys","param_no","test","Function","isNaN","TypeError","String","fromCharCode","width","precision","parseFloat","toExponential","toFixed","toPrecision","substring","toLowerCase","valueOf","toUpperCase","pad_char","charAt","repeat","align","sprintf_format","fmt","sprintf_cache","match","_fmt","arg_names","exec","SyntaxError","field_list","replacement_field","field_match","sprintf_parse","vsprintf","apply","concat","window","obj","_concat","_concat2","ResultConstructor","totalLength","_len","arrays","_key","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","done","arr","return","result","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_arr","set","isObjectWith","props","every","isArrayLike","isCollectionLike","excludeWeakOnes","WeakMap","WeakSet","isErrorLike","isPromiseLike","then","loop","id","MAX_SAFE_INTEGER"],"mappings":"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","file":"simple-mq.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"mqtt\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"mqtt\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"mqtt\")) : factory(root[\"mqtt\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE__7__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/* global mqtt, bsp, window */\n\"use strict\";\n\nconst bsp = require(\"bsp\");\nconst sequid = require(\"sequid\").default;\n\nclass SimpleMQ {\n    /**\n     * @param {{[x: string]: any, scope?: string}} config \n     */\n    constructor(config) {\n        this.config = config;\n        this.topics = Object.create(null);\n        this.serial = sequid(0, true);\n        this.channel = null;\n    }\n\n    /**\n     * @returns {Promise<this>}\n     */\n    connect() {\n        return new Promise((resolve, reject) => {\n            if (typeof mqtt === \"undefined\") {\n                global[\"mqtt\"] = require(\"mqtt\");\n            }\n\n            this.channel = mqtt.connect(this.config);\n            this.channel.on(\"connect\", () => {\n                this.channel.on(\"message\", (topic, payload) => {\n                    let handlers = this.topics[topic];\n\n                    if (handlers && handlers.size > 0) {\n                        let data, replyId;\n                        let reply = (data) => {\n                            replyId && this.publish(replyId, data);\n                        };\n\n                        try {\n                            [data, replyId] = bsp.decode(payload, []);\n                        } catch (e) {\n                            data = payload;\n                        }\n\n                        for (let handler of handlers.values()) {\n                            handler.call(void 0, data, reply);\n                        }\n                    }\n                });\n\n                resolve(this);\n            }).on(\"error\", (err) => {\n                reject(err);\n            });\n        });\n    }\n\n    /**\n     * @returns {Promise<this>}\n     */\n    disconnect() {\n        return new Promise(resolve => {\n            this.channel.end(true, null, () => resolve(this));\n        });\n    }\n\n    /**\n     * @param {string} topic \n     * @param {any} data\n     * @param {(data: any) => void} reply\n     */\n    publish(topic, data, reply = null) {\n        let replyId = `${topic}@${this.serial.next().value}`;\n        topic = this.resolve(topic);\n\n        if (reply) {\n            this.subscribe(replyId, (data) => {\n                this.unsubscribe(replyId);\n                reply(data);\n            });\n            this.channel.publish(topic, bsp.encode(data, replyId));\n        } else {\n            this.channel.publish(topic, bsp.encode(data));\n        }\n\n        return this;\n    }\n\n    /**\n     * @param {string} topic \n     * @param {(data: any, reply: (data: any) => void) => void} handler \n     */\n    subscribe(topic, handler) {\n        topic = this.resolve(topic);\n        this.channel.subscribe(topic);\n\n        if (!this.topics[topic]) {\n            this.topics[topic] = new Set([handler]);\n        } else {\n            this.topics[topic].add(handler);\n        }\n\n        return this;\n    }\n\n    /**\n     * @param {string} topic \n     * @param {(data: any, reply: (data: any) => void) => void} handler \n     */\n    unsubscribe(topic, handler) {\n        topic = this.resolve(topic);\n\n        if (handler) {\n            let handlers = this.topics[topic];\n            if (handlers && handlers.size > 0) {\n                handlers.delete(handler);\n            }\n        } else {\n            this.channel.unsubscribe(topic);\n            delete this.topics[topic];\n        }\n\n        return this;\n    }\n\n    /**\n     * @param {string} topic \n     */\n    resolve(topic) {\n        topic = topic.replace(/\\./g, \"/\");\n        this.config.scope && (topic = this.config.scope + \"/\" + topic);\n        return topic;\n    }\n}\n\nexports.SimpleMQ = SimpleMQ;\nexports.default = SimpleMQ;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nconst sprintf = require(\"sprintf-js\").sprintf;\nconst concatTypedArray = require(\"concat-typed-array\");\nconst { isBufferLike } = require(\"is-like\");\n\nconst hasBuffer = typeof Buffer === \"function\";\nconst TypedArray = hasBuffer ? Buffer : Uint8Array;\n\n/** @type {TextEncoder} */\nlet encoder;\n/** @type {TextDecoder} */\nlet decoder;\n\nif (typeof TextEncoder === \"function\") {\n    encoder = new TextEncoder();\n}\n\nif (typeof TextDecoder === \"function\") {\n    decoder = new TextDecoder(\"utf8\");\n}\n\n/**\n * @param {string} text \n * @returns {Buffer|Uint8Array}\n */\nfunction encodeText(text) {\n    if (hasBuffer) {\n        return Buffer.from(text);\n    } else if (encoder) {\n        return encoder.encode(text);\n    } else {\n        throw new Error(\"No implementation of text encoder was found\");\n    }\n}\n\n/**\n * @param {Buffer|Uint8Array} buf \n * @returns {string}\n */\nfunction decodeText(buf) {\n    if (hasBuffer) {\n        return Buffer.from(buf).toString(\"utf8\");\n    } else if (decoder) {\n        return decoder.decode(buf);\n    } else {\n        throw new Error(\"No implementation of text decoder was found\");\n    }\n}\n\n/**\n * @param {Buffer[] | Uint8Array[]} bufs\n * @returns {Buffer|Uint8Array}\n */\nfunction concatBuffers(bufs) {\n    return concatTypedArray(TypedArray, ...bufs);\n}\n\nfunction encode(...data) {\n    let buf = TypedArray.from([]);\n\n    for (let payload of data) {\n        let type = NaN;\n\n        switch (typeof payload) {\n            case \"string\":\n                type = 1;\n                payload = encodeText(payload);\n                break;\n\n            case \"number\":\n                type = 2;\n                payload = encodeText(payload.toString());\n                break;\n\n            case \"bigint\":\n                type = 3;\n                payload = encodeText(payload.toString());\n                break;\n\n            case \"boolean\":\n                type = 4;\n                payload = TypedArray.from([Number(payload)]);\n                break;\n\n            case \"object\":\n                if (null === payload) {\n                    type = 0;\n                    payload = TypedArray.from([]);\n                } else if (isBufferLike(payload)) {\n                    type = 6; // raw data\n                } else {\n                    type = 5;\n                    payload = encodeText(JSON.stringify(payload));\n                }\n                break;\n        }\n\n        let head = [type];\n        let len = payload.byteLength;\n\n        if (len <= 255) {\n            head.push(1, len);\n        } else if (len <= 65535) {\n            head.push(2);\n\n            for (let i = 0, bin = sprintf(\"%016b\", len); i < 16;) {\n                head.push(parseInt(bin.slice(i, i += 8), 2));\n            }\n        } else {\n            head.push(3);\n\n            for (let i = 0, bin = sprintf(\"%064b\", len); i < 64;) {\n                head.push(parseInt(bin.slice(i, i += 8), 2));\n            }\n        }\n\n        buf = concatBuffers([buf, TypedArray.from(head), payload]);\n    }\n\n    return buf;\n}\n\n/**\n * @param {Buffer|Uint8Array} buf\n */\nfunction parsePayloadInfo(buf) {\n    if (buf.byteLength < 3) {\n        return null; // header frame\n    }\n\n    let [type, lenType] = buf;\n    let offset = [0, 3, 4, 10][lenType];\n    let length = -1;\n    let bin = \"\";\n\n    if (type > 6 || lenType > 3) {\n        return false; // malformed/unencoded data\n    }\n\n    if (buf.byteLength < offset) {\n        return null;  // header frame\n    }\n\n    switch (lenType) {\n        case 1:\n            length = buf[2];\n            break;\n\n        case 2:\n            for (let i = 2; i < 4; i++) {\n                bin += sprintf(\"%08b\", buf[i]);\n            }\n\n            length = parseInt(bin, 2);\n            break;\n\n        case 3:\n            for (let i = 2; i < 10; i++) {\n                bin += sprintf(\"%08b\", buf[i]);\n            }\n\n            length = parseInt(bin, 2);\n            break;\n    }\n\n    return { type, offset, length };\n}\n\n/**\n * @param {[number, number, Buffer|Uint8Array]} temp \n */\nfunction isHeaderTemp(temp) {\n    return temp.length === 3\n        && temp[0] === undefined\n        && temp[1] === undefined\n        && temp[2] instanceof Uint8Array;\n}\n\n/**\n * @param {Buffer|Uint8Array} buf \n * @param {[number, number, Buffer|Uint8Array]} temp \n */\nfunction fillTemp(buf, temp) {\n    if (isHeaderTemp(temp)) {\n        buf = concatBuffers([temp[2], buf]);\n    }\n\n    let info = parsePayloadInfo(buf);\n\n    if (info === false) {\n        return; // malformed/unencoded data\n    } else if (info === null) {\n        temp[0] = temp[1] = void 0;\n        temp[2] = buf;\n    } else {\n        let { type, length, offset } = info;\n\n        if (offset !== 0) {\n            temp[0] = type;\n            temp[1] = length;\n            temp[2] = buf.slice(offset);\n        }\n    }\n}\n\n/**\n * @param {Buffer|Uint8Array} buf \n * @param {[number, number, Buffer|Uint8Array]} temp\n * @returns {IterableIterator<any>}\n */\nfunction* decodeSegment(buf, temp) {\n    // put the buffer into the temp\n    if (temp.length === 0 || isHeaderTemp(temp)) {\n        fillTemp(buf, temp);\n    } else if (temp.length === 3) {\n        temp[2] = concatBuffers([temp[2], buf]);\n    }\n\n    // scan the temp and yield any parsed data\n    while (temp.length === 3 && temp[2].byteLength >= temp[1]) {\n        let [type, length, buf] = temp;\n        let payload = buf.slice(0, length);\n\n        buf = buf.slice(length);\n\n        switch (type) {\n            case 0: // null\n                yield null;\n                break;\n\n            case 1:\n                yield decodeText(payload);\n                break;\n\n            case 2:\n                yield Number(decodeText(payload));\n                break;\n\n            case 3:\n                yield BigInt(decodeText(payload));\n                break;\n\n            case 4:\n                yield Boolean(payload[0]);\n                break;\n\n            case 5:\n                yield JSON.parse(decodeText(payload));\n                break;\n\n            case 6:\n                yield payload;\n                break;\n        }\n\n        if (buf.byteLength > 0) {\n            fillTemp(buf, temp);\n        } else {\n            temp.splice(0, 3); // clean temp\n        }\n    }\n}\n\n/**\n * @param {Buffer|Uint8Array} buf \n */\nfunction decode(buf) {\n    if (arguments.length === 2 && Array.isArray(arguments[1])) {\n        return decodeSegment(buf, arguments[1]);\n    } else {\n        return decodeSegment(buf, []).next().value;\n    }\n}\n\nfunction wrap(stream) {\n    let _write = stream.write.bind(stream);\n    let _on = stream.on.bind(stream);\n    let _once = stream.once.bind(stream);\n    let _prepend = stream.prependListener.bind(stream);\n    let _prependOnce = stream.prependOnceListener.bind(stream);\n    let addListener = (fn, event, listener) => {\n        if (event === \"data\") {\n            let temp = [];\n            let _listener = (buf) => {\n                for (let data of decode(buf, temp)) {\n                    listener(data);\n                }\n            };\n            return fn(\"data\", _listener);\n        } else {\n            return fn(event, listener);\n        }\n    };\n\n    stream.write = function write(chunk, encoding, callback) {\n        return _write(encode(chunk), encoding, callback);\n    };\n\n    stream.on = stream.addListener = function on(event, listener) {\n        return addListener(_on, event, listener);\n    };\n\n    stream.once = function once(event, listener) {\n        return addListener(_once, event, listener);\n    };\n\n    stream.prependListener = function prependListener(event, listener) {\n        return addListener(_prepend, event, listener);\n    };\n\n    stream.prependOnceListener = function prependOnceListener(event, listener) {\n        return addListener(_prependOnce, event, listener);\n    };\n\n    return stream;\n}\n\nexports.encode = encode;\nexports.decode = decode;\nexports.wrap = wrap;","/* global window, exports, define */\n\n!function() {\n    'use strict'\n\n    var re = {\n        not_string: /[^s]/,\n        not_bool: /[^t]/,\n        not_type: /[^T]/,\n        not_primitive: /[^v]/,\n        number: /[diefg]/,\n        numeric_arg: /[bcdiefguxX]/,\n        json: /[j]/,\n        not_json: /[^j]/,\n        text: /^[^\\x25]+/,\n        modulo: /^\\x25{2}/,\n        placeholder: /^\\x25(?:([1-9]\\d*)\\$|\\(([^)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-gijostTuvxX])/,\n        key: /^([a-z_][a-z_\\d]*)/i,\n        key_access: /^\\.([a-z_][a-z_\\d]*)/i,\n        index_access: /^\\[(\\d+)\\]/,\n        sign: /^[+-]/\n    }\n\n    function sprintf(key) {\n        // `arguments` is not an array, but should be fine for this call\n        return sprintf_format(sprintf_parse(key), arguments)\n    }\n\n    function vsprintf(fmt, argv) {\n        return sprintf.apply(null, [fmt].concat(argv || []))\n    }\n\n    function sprintf_format(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, arg, output = '', i, k, ph, pad, pad_character, pad_length, is_positive, sign\n        for (i = 0; i < tree_length; i++) {\n            if (typeof parse_tree[i] === 'string') {\n                output += parse_tree[i]\n            }\n            else if (typeof parse_tree[i] === 'object') {\n                ph = parse_tree[i] // convenience purposes only\n                if (ph.keys) { // keyword argument\n                    arg = argv[cursor]\n                    for (k = 0; k < ph.keys.length; k++) {\n                        if (arg == undefined) {\n                            throw new Error(sprintf('[sprintf] Cannot access property \"%s\" of undefined value \"%s\"', ph.keys[k], ph.keys[k-1]))\n                        }\n                        arg = arg[ph.keys[k]]\n                    }\n                }\n                else if (ph.param_no) { // positional argument (explicit)\n                    arg = argv[ph.param_no]\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++]\n                }\n\n                if (re.not_type.test(ph.type) && re.not_primitive.test(ph.type) && arg instanceof Function) {\n                    arg = arg()\n                }\n\n                if (re.numeric_arg.test(ph.type) && (typeof arg !== 'number' && isNaN(arg))) {\n                    throw new TypeError(sprintf('[sprintf] expecting number but found %T', arg))\n                }\n\n                if (re.number.test(ph.type)) {\n                    is_positive = arg >= 0\n                }\n\n                switch (ph.type) {\n                    case 'b':\n                        arg = parseInt(arg, 10).toString(2)\n                        break\n                    case 'c':\n                        arg = String.fromCharCode(parseInt(arg, 10))\n                        break\n                    case 'd':\n                    case 'i':\n                        arg = parseInt(arg, 10)\n                        break\n                    case 'j':\n                        arg = JSON.stringify(arg, null, ph.width ? parseInt(ph.width) : 0)\n                        break\n                    case 'e':\n                        arg = ph.precision ? parseFloat(arg).toExponential(ph.precision) : parseFloat(arg).toExponential()\n                        break\n                    case 'f':\n                        arg = ph.precision ? parseFloat(arg).toFixed(ph.precision) : parseFloat(arg)\n                        break\n                    case 'g':\n                        arg = ph.precision ? String(Number(arg.toPrecision(ph.precision))) : parseFloat(arg)\n                        break\n                    case 'o':\n                        arg = (parseInt(arg, 10) >>> 0).toString(8)\n                        break\n                    case 's':\n                        arg = String(arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 't':\n                        arg = String(!!arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'T':\n                        arg = Object.prototype.toString.call(arg).slice(8, -1).toLowerCase()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'u':\n                        arg = parseInt(arg, 10) >>> 0\n                        break\n                    case 'v':\n                        arg = arg.valueOf()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'x':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16)\n                        break\n                    case 'X':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16).toUpperCase()\n                        break\n                }\n                if (re.json.test(ph.type)) {\n                    output += arg\n                }\n                else {\n                    if (re.number.test(ph.type) && (!is_positive || ph.sign)) {\n                        sign = is_positive ? '+' : '-'\n                        arg = arg.toString().replace(re.sign, '')\n                    }\n                    else {\n                        sign = ''\n                    }\n                    pad_character = ph.pad_char ? ph.pad_char === '0' ? '0' : ph.pad_char.charAt(1) : ' '\n                    pad_length = ph.width - (sign + arg).length\n                    pad = ph.width ? (pad_length > 0 ? pad_character.repeat(pad_length) : '') : ''\n                    output += ph.align ? sign + arg + pad : (pad_character === '0' ? sign + pad + arg : pad + sign + arg)\n                }\n            }\n        }\n        return output\n    }\n\n    var sprintf_cache = Object.create(null)\n\n    function sprintf_parse(fmt) {\n        if (sprintf_cache[fmt]) {\n            return sprintf_cache[fmt]\n        }\n\n        var _fmt = fmt, match, parse_tree = [], arg_names = 0\n        while (_fmt) {\n            if ((match = re.text.exec(_fmt)) !== null) {\n                parse_tree.push(match[0])\n            }\n            else if ((match = re.modulo.exec(_fmt)) !== null) {\n                parse_tree.push('%')\n            }\n            else if ((match = re.placeholder.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1\n                    var field_list = [], replacement_field = match[2], field_match = []\n                    if ((field_match = re.key.exec(replacement_field)) !== null) {\n                        field_list.push(field_match[1])\n                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\n                            if ((field_match = re.key_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else if ((field_match = re.index_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else {\n                                throw new SyntaxError('[sprintf] failed to parse named argument key')\n                            }\n                        }\n                    }\n                    else {\n                        throw new SyntaxError('[sprintf] failed to parse named argument key')\n                    }\n                    match[2] = field_list\n                }\n                else {\n                    arg_names |= 2\n                }\n                if (arg_names === 3) {\n                    throw new Error('[sprintf] mixing positional and named placeholders is not (yet) supported')\n                }\n\n                parse_tree.push(\n                    {\n                        placeholder: match[0],\n                        param_no:    match[1],\n                        keys:        match[2],\n                        sign:        match[3],\n                        pad_char:    match[4],\n                        align:       match[5],\n                        width:       match[6],\n                        precision:   match[7],\n                        type:        match[8]\n                    }\n                )\n            }\n            else {\n                throw new SyntaxError('[sprintf] unexpected placeholder')\n            }\n            _fmt = _fmt.substring(match[0].length)\n        }\n        return sprintf_cache[fmt] = parse_tree\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    /* eslint-disable quote-props */\n    if (typeof exports !== 'undefined') {\n        exports['sprintf'] = sprintf\n        exports['vsprintf'] = vsprintf\n    }\n    if (typeof window !== 'undefined') {\n        window['sprintf'] = sprintf\n        window['vsprintf'] = vsprintf\n\n        if (typeof define === 'function' && define['amd']) {\n            define(function() {\n                return {\n                    'sprintf': sprintf,\n                    'vsprintf': vsprintf\n                }\n            })\n        }\n    }\n    /* eslint-enable quote-props */\n}(); // eslint-disable-line\n","'use strict';\n\nvar _concat = require('./concat');\n\nvar _concat2 = _interopRequireDefault(_concat);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = _concat2.default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (ResultConstructor) {\n  var totalLength = 0;\n\n  for (var _len = arguments.length, arrays = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    arrays[_key - 1] = arguments[_key];\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = arrays[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var arr = _step.value;\n\n      totalLength += arr.length;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var result = new ResultConstructor(totalLength);\n  var offset = 0;\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = arrays[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _arr = _step2.value;\n\n      result.set(_arr, offset);\n      offset += _arr.length;\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return result;\n};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n/**\n * @param {any} obj \n * @param {Array<string|symbol>} props \n */\nfunction isObjectWith(obj, props) {\n    let isObj = typeof obj === \"object\" && obj !== null;\n    return isObj && props.every(p => p in obj);\n}\n\nfunction isArrayLike(obj) {\n    return isObjectWith(obj, [\"length\"]) || (typeof obj === \"string\");\n}\n\nfunction isCollectionLike(obj, excludeWeakOnes = false) {\n    return (isObjectWith(obj, [\"size\"])\n        && typeof obj[Symbol.iterator] === \"function\")\n        || (!excludeWeakOnes &&\n            (obj instanceof WeakMap || obj instanceof WeakSet));\n}\n\nfunction isBufferLike(obj) {\n    return isObjectWith(obj, [\"byteLength\"])\n        && typeof obj.slice === \"function\";\n}\n\nfunction isErrorLike(obj) {\n    return isObjectWith(obj, [\"name\", \"message\", \"stack\"]);\n}\n\nfunction isPromiseLike(obj) {\n    return isObjectWith(obj, [])\n        && typeof obj.then === \"function\";\n}\n\nexports.isArrayLike = isArrayLike;\nexports.isCollectionLike = isCollectionLike;\nexports.isBufferLike = isBufferLike;\nexports.isErrorLike = isErrorLike;\nexports.isPromiseLike = isPromiseLike;","\"use strict\";\n\nfunction* sequid(offset, loop) {\n    let id = offset || 0;\n\n    while (true) {\n        yield ++id;\n\n        if (id === Number.MAX_SAFE_INTEGER) {\n            if (loop) {\n                id = offset || 0;\n            } else {\n                break;\n            }\n        }\n    }\n}\n\nmodule.exports = sequid;\nmodule.exports.default = sequid;","module.exports = __WEBPACK_EXTERNAL_MODULE__7__;"],"sourceRoot":""}